version: '3'
services:
  postgres:
    image: postgres:latest
    command: postgres -c log_lock_waits=on -c log_min_duration_statement=100
    environment:
      POSTGRES_DB: django
      POSTGRES_PASSWORD: postgres
    ports:
      - ${DOCKER_POSTGRES_PORT-5432}:5432

  rabbitmq:
    image: rabbitmq:management
    ports:
      - ${DOCKER_RABBITMQ_PORT-5672}:5672
      - ${DOCKER_RABBITMQ_CONSOLE_PORT-15672}:15672

  minio:
    image: minio/minio:latest
    # When run with a TTY, minio prints credentials on startup
    tty: true
    command: ["server", "/data", "--console-address", ":${DOCKER_MINIO_CONSOLE_PORT-9001}"]
    environment:
      MINIO_ROOT_USER: minioAccessKey
      MINIO_ROOT_PASSWORD: minioSecretKey
    ports:
      - ${DOCKER_MINIO_PORT-9000}:9000
      - ${DOCKER_MINIO_CONSOLE_PORT-9001}:9001
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 1s
      timeout: 10s
      retries: 10


  # Create dev and test buckets
  createbuckets:
    image: minio/mc:latest
    environment:
      MINIO_ACCESS_KEY: minioAccessKey
      MINIO_SECRET_KEY: minioSecretKey
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set myminio http://minio:9000 minioAccessKey minioSecretKey;
      /usr/bin/mc mb myminio/dandi-dandisets --with-versioning;
      /usr/bin/mc mb myminio/test-dandiapi-dandisets --with-versioning;
      /usr/bin/mc version enable myminio/dandi-dandisets;
      /usr/bin/mc version enable myminio/test-dandiapi-dandisets;
      exit 0;
      "
