/* eslint-disable no-console */

const fs = require('fs');
const path = require('path');

const axios = require('axios');
const { compile } = require('json-schema-to-typescript');

/**
 * Migrates the TypeScript typings in src/schema.ts to the
 * specified version of the dandiset metadata schema
 *
 * @param {string} version
 */
async function migrate(version) {
  const schemaUrl = `https://raw.githubusercontent.com/dandi/schema/master/releases/${version}/dandiset.json`;

  let data;
  let schema;

  // Download JSON schema from GitHub
  try {
    const res = await axios.get(schemaUrl);
    data = res.data;
  } catch (e) {
    console.error(`Failed to download schema version ${version} from GitHub.`);
    process.exit(1);
  }

  // Convert JSON schema into TypeScript typings
  try {
    schema = await compile(data, 'Metadata', {
      bannerComment: `
      /* eslint-disable */
      /**
       * This file was automatically generated by json-schema-to-typescript.
       * DO NOT MODIFY IT BY HAND. All changes should be made through the "yarn migrate" command.
       * TypeScript typings for dandiset metadata are based on schema v${version} (${schemaUrl})
       */`,
    });
  } catch (e) {
    console.error('json-schema-to-typescript failed to convert schema to TS typings.');
    process.exit(1);
  }

  // Save the TypeScript typings into a .ts file
  fs.writeFileSync(path.join(__dirname, 'types/schema.ts'), schema);
}

if (process.argv.length !== 3) {
  console.error('USAGE: migrate [schemaVersion]');
  process.exit(1);
}

migrate(process.argv[2]);
