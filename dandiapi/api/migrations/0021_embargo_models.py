# Generated by Django 4.0 on 2021-12-20 18:44

import uuid

from django.conf import settings
import django.contrib.postgres.indexes
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_extensions.db.fields

import dandiapi.api.storage


def get_embargo_storage_prefix(instance, filename: str) -> str:
    return f'{settings.DANDI_DANDISETS_EMBARGO_BUCKET_PREFIX}{filename}'


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0020_zarr'),
    ]

    operations = [
        migrations.AddField(
            model_name='dandiset',
            name='embargo_status',
            field=models.CharField(
                max_length=12,
                choices=[
                    ('EMBARGOED', 'Embargoed'),
                    ('UNEMBARGOING', 'Unembargoing'),
                    ('OPEN', 'Open'),
                ],
                default='OPEN',
            ),
        ),
        migrations.CreateModel(
            name='EmbargoedAssetBlob',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('blob_id', models.UUIDField(unique=True)),
                (
                    'sha256',
                    models.CharField(
                        blank=True,
                        max_length=64,
                        null=True,
                        validators=[django.core.validators.RegexValidator('^[0-9a-f]{64}$')],
                    ),
                ),
                (
                    'etag',
                    models.CharField(
                        max_length=40,
                        validators=[
                            django.core.validators.RegexValidator('^[0-9a-f]{32}(-[1-9][0-9]*)?$')
                        ],
                    ),
                ),
                ('size', models.PositiveBigIntegerField()),
                (
                    'blob',
                    models.FileField(
                        blank=True,
                        storage=dandiapi.api.storage.get_embargo_storage,
                        upload_to=get_embargo_storage_prefix,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='embargoedassetblob',
            name='dandiset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='embargoed_asset_blobs',
                to='api.dandiset',
            ),
        ),
        migrations.AddIndex(
            model_name='embargoedassetblob',
            index=django.contrib.postgres.indexes.HashIndex(
                fields=['etag'], name='api_embargo_etag_06a255_hash'
            ),
        ),
        migrations.CreateModel(
            name='EmbargoedUpload',
            fields=[
                (
                    'id',
                    models.AutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name='ID'
                    ),
                ),
                (
                    'created',
                    django_extensions.db.fields.CreationDateTimeField(
                        auto_now_add=True, verbose_name='created'
                    ),
                ),
                (
                    'modified',
                    django_extensions.db.fields.ModificationDateTimeField(
                        auto_now=True, verbose_name='modified'
                    ),
                ),
                ('upload_id', models.UUIDField(db_index=True, default=uuid.uuid4, unique=True)),
                (
                    'etag',
                    models.CharField(
                        blank=True,
                        db_index=True,
                        max_length=40,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator('^[0-9a-f]{32}(-[1-9][0-9]*)?$')
                        ],
                    ),
                ),
                (
                    'multipart_upload_id',
                    models.CharField(db_index=True, max_length=128, unique=True),
                ),
                ('size', models.PositiveBigIntegerField()),
                (
                    'blob',
                    models.FileField(
                        blank=True,
                        storage=dandiapi.api.storage.get_embargo_storage,
                        upload_to=get_embargo_storage_prefix,
                    ),
                ),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='embargoedupload',
            name='dandiset',
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name='embargoed_uploads',
                to='api.dandiset',
            ),
        ),
        migrations.AddIndex(
            model_name='embargoedupload',
            index=models.Index(fields=['etag'], name='api_embargo_etag_064c86_idx'),
        ),
        migrations.AddField(
            model_name='asset',
            name='embargoed_blob',
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name='assets',
                to='api.embargoedassetblob',
            ),
        ),
        migrations.AddConstraint(
            model_name='embargoedassetblob',
            constraint=models.UniqueConstraint(
                fields=('dandiset', 'etag', 'size'), name='unique-embargo-etag-size'
            ),
        ),
        migrations.RemoveConstraint(
            model_name='asset',
            name='exactly-one-blob',
        ),
        migrations.AddConstraint(
            model_name='asset',
            constraint=models.CheckConstraint(
                check=models.Q(
                    models.Q(
                        ('blob__isnull', True),
                        ('embargoed_blob__isnull', True),
                        ('zarr__isnull', False),
                    ),
                    models.Q(
                        ('blob__isnull', True),
                        ('embargoed_blob__isnull', False),
                        ('zarr__isnull', True),
                    ),
                    models.Q(
                        ('blob__isnull', False),
                        ('embargoed_blob__isnull', True),
                        ('zarr__isnull', True),
                    ),
                    _connector='OR',
                ),
                name='exactly-one-blob',
            ),
        ),
    ]
