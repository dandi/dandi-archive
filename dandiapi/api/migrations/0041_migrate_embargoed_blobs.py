# Generated by Django 4.1.1 on 2022-11-08 16:51

import uuid

from django.db import migrations


def migrate_embargoed_models(apps, _):
    Asset = apps.get_model('api', 'Asset')
    AssetBlob = apps.get_model('api', 'AssetBlob')
    EmbargoedAssetBlob = apps.get_model('api', 'EmbargoedAssetBlob')

    # Copy all embargoed asset blobs before EmbargoedAssetBlob deletion
    for blob in EmbargoedAssetBlob.objects.all():
        existing = AssetBlob.objects.filter(etag=blob.etag).first()
        if existing is not None:
            new_blob = existing
            new_blob.pk = None
            new_blob.embargoed = True
            new_blob.blob_id = uuid.uuid4()
        else:
            # Create blob
            new_blob = AssetBlob(
                embargoed=True,
                blob=blob.blob,
                blob_id=blob.blob_id,
                sha256=blob.sha256,
                etag=blob.etag,
                size=blob.size,
            )

        # Set this new blob for all assets
        new_blob.save()
        Asset.objects.filter(embargoed_blob=blob).update(blob=new_blob, embargoed_blob=None)

    # Copy all embargoed uploads before EmbargoedUpload deletion
    Upload = apps.get_model('api', 'Upload')
    EmbargoedUpload = apps.get_model('api', 'EmbargoedUpload')
    for upload in EmbargoedUpload.objects.all():
        Upload(
            embargoed=True,
            upload_id=upload.upload_id,
            blob=upload.blob,
            etag=upload.etag,
            multipart_upload_id=upload.multipart_upload_id,
            size=upload.size,
            dandiset=upload.dandiset,
        ).save()


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0040_add_embargoed_assetblob_upload'),
    ]

    operations = [
        # Copy all embargoed uploads and asset blobs before deletion
        migrations.RunPython(migrate_embargoed_models),
    ]
